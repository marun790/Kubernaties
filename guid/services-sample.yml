apiVersion: v1
kind: Service
metadata:
  name: "my service"
  labels:
    app: "my-service"
spec:
  type: ClusterIP # determines how the Service is exposed. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
  ports:          # The list of ports that are exposed by this service.
  - name: http
    protocol: TCP
    port: 80
    targetPort: 9376
    nodePort: 80 # The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail.
  selector:
    app: "backend"
  sessionAffinity: ClientIP # Supports "ClientIP" and "None". Used to maintain session affinity. Enable client IP based session affinity. 
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800 # timeoutSeconds specifies the seconds of ClientIP type session sticky time
  loadBalancerIP: ""  # Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created.
  externalTrafficPolicy: Local # denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. Values are "Local" or "Cluster"
  externalIPs: # list of IP addresses for which nodes in the cluster will also accept traffic for this service. These IPs are not managed by Kubernetes. The user is responsible for ensuring that traffic arrives at a node with this IP. 
    - 192.50.51.208
    - 10.0.0.1
  clusterIP: 10.0.0.1 # clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail.


# externalName - externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service.    
# healthCheckNodePort - specifies the healthcheck nodePort for the service. If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local.
# publishNotReadyAddresses - indicates that DNS implementations must publish the notReadyAddresses of subsets for the Endpoints associated with the Service.
# loadBalancerSourceRanges - If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature

